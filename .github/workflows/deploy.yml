name: Build and Deploy to ECS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ecs-learning-frontend
        IMAGE_TAG: ${{ github.sha }}-${{ github.run_number }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    
    - name: Create new task definition
      id: task-def
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ecs-learning-frontend
        IMAGE_TAG: ${{ github.sha }}-${{ github.run_number }}
      run: |
        # Get the current task definition
        aws ecs describe-task-definition --task-definition ecs-learning-frontend --region eu-north-1 > task-definition.json
        
        # Update the image in the task definition
        jq --arg IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image = $IMAGE' task-definition.json > updated-task-definition.json
        
        # Register the new task definition
        aws ecs register-task-definition --cli-input-json file://updated-task-definition.json --region eu-north-1 > new-task-definition.json
        
        # Extract the new task definition ARN
        TASK_DEF_ARN=$(jq -r '.taskDefinition.taskDefinitionArn' new-task-definition.json)
        echo "task-definition-arn=$TASK_DEF_ARN" >> $GITHUB_OUTPUT
        echo "New task definition created: $TASK_DEF_ARN"
    
    - name: Update ECS Service
      env:
        TASK_DEF_ARN: ${{ steps.task-def.outputs.task-definition-arn }}
      run: |
        aws ecs update-service \
          --cluster ecs-learning-cluster \
          --service frontend-service \
          --task-definition $TASK_DEF_ARN \
          --region eu-north-1
        
        echo "ECS service updated with new task definition"
